["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ ","~$=>","~$schema.core"],"~:excludes",["~#set",["~$pop"]],"~:name","~$naga.queue","~:imports",null,"~:requires",["^ ","~$s","^6","^6","^6"],"~:cljs.spec/speced-vars",[],"~:uses",["^ "],"~:defs",["^ ","~$SalienceQueue",["^ ","~:num-fields",4,"~:protocols",["^8",["~$cljs.core/IRecord","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$naga.queue/PQueue","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^:","~$naga.queue/SalienceQueue","~:file","resources/public/cljs/out/naga/queue.cljc","~:end-column",25,"~:type",true,"~:column",12,"~:internal-ctor",true,"~:line",33,"~:record",true,"~:end-line",33,"~:skip-protocol-flag",["^8",["^D","^E","^F","^G","^I","^J","^K","^L","^M","^N","^O","^P","^Q","^R"]]],"~$add",["^ ","~:protocol-inline",null,"~:meta",["^ ","^T","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/queue.cljc","^Y",15,"^W",4,"^[",15,"^U",7,"~:protocol","^H","~:doc","Adds an element to the queue if it isn't already present, returning the new queue. Uses update-fn on the element if it is already in the queue","~:arglists",["~#list",["~$quote",["^17",[["~$queue","~$element"],["^19","~$update-fn","^1:"]]]]],"~:top-fn",["^ ","~:variadic",false,"~:max-fixed-arity",3,"~:method-params",["^17",[["^19","^1:"],["^19","^1;","^1:"]]],"^16",["^17",[["^19","^1:"],["^19","^1;","^1:"]]],"~:arglists-meta",["^17",[null,null]]]],"^14","^H","^:","~$naga.queue/add","^1=",false,"^T","resources/public/cljs/out/naga/queue.cljc","^U",7,"^1<",["^ ","^1=",false,"^1>",3,"^1?",["^17",[["^19","^1:"],["^19","^1;","^1:"]]],"^16",["^17",[["^19","^1:"],["^19","^1;","^1:"]]],"^1@",["^17",[null,null]]],"^1?",["^17",[["^19","^1:"],["^19","^1;","^1:"]]],"~:protocol-impl",null,"^1@",["^17",[null,null]],"^W",1,"^Y",11,"^[",15,"^1>",3,"~:fn-var",true,"^16",["^17",[["^19","^1:"],["^19","^1;","^1:"]]],"^15","Adds an element to the queue if it isn't already present, returning the new queue. Uses update-fn on the element if it is already in the queue"],"~$map->SalienceQueue",["^ ","^12",null,"^13",["^ ","^T","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/queue.cljc","^Y",33,"^W",12,"^[",33,"^U",25,"^X",true,"~:factory","~:map","^16",["^17",["^18",["^17",[["~$G__36051"]]]]],"^15","Factory function for naga.queue/SalienceQueue, taking a map of keywords to field values."],"^:","~$naga.queue/map->SalienceQueue","^1=",false,"^T","resources/public/cljs/out/naga/queue.cljc","^U",25,"^1?",["^17",[["^1G"]]],"^1B",null,"^1@",["^17",[null,null]],"^W",1,"^X",true,"^1E","^1F","^Y",33,"^[",33,"^1>",1,"^1C",true,"^16",["^17",["^18",["^17",[["^1G"]]]]],"^15","Factory function for naga.queue/SalienceQueue, taking a map of keywords to field values."],"^9",["^ ","^12",null,"^13",["^ ","^T","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/queue.cljc","^Y",14,"^W",4,"^[",14,"^U",7,"^14","^H","^15","Removes the head from the queue","^16",["^17",["^18",["^17",[["^19"]]]]]],"^14","^H","^:","~$naga.queue/pop","^1=",false,"^T","resources/public/cljs/out/naga/queue.cljc","^U",7,"^1?",["^17",[["^19"]]],"^1B",null,"^1@",["^17",[null,null]],"^W",1,"^Y",11,"^[",14,"^1>",1,"^1C",true,"^16",["^17",["^18",["^17",[["^19"]]]]],"^15","Removes the head from the queue"],"~$drain",["^ ","^12",null,"^13",["^ ","^T","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/queue.cljc","^Y",66,"^W",7,"^[",66,"^U",12,"^16",["^17",["^18",["^17",[["^19"]]]]],"^15","Pulls everything off a queue into a seq."],"^:","~$naga.queue/drain","^1=",false,"^T","resources/public/cljs/out/naga/queue.cljc","^U",12,"^1?",["^17",[["^19"]]],"^1B",null,"^1@",["^17",[null,null]],"^W",1,"^Y",66,"^[",66,"^1>",1,"^1C",true,"^16",["^17",["^18",["^17",[["^19"]]]]],"^15","Pulls everything off a queue into a seq."],"~$PQueue",["^ ","^13",["^ ","^T","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/queue.cljc","^Y",11,"^W",14,"^[",11,"^U",20,"^15",null,"~:protocol-symbol",true,"~:jsdoc",["^17",["@interface"]],"~:protocol-info",["^ ","~:methods",["^ ","~$q-count",[["^19"]],"~$head",[["^19"]],"^9",[["^19"]],"^11",[["^19","^1:"],["^19","^1;","^1:"]]]]],"^1M",true,"^:","^H","^T","resources/public/cljs/out/naga/queue.cljc","^U",20,"^W",1,"^Y",11,"^1O",["^ ","^1P",["^ ","^1Q",[["^19"]],"^1R",[["^19"]],"^9",[["^19"]],"^11",[["^19","^1:"],["^19","^1;","^1:"]]]],"~:info",null,"^[",11,"~:tag","~$any","~:impls",["^8",["^S"]],"^15",null,"^1N",["^17",["@interface"]]],"^1R",["^ ","^12",null,"^13",["^ ","^T","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/queue.cljc","^Y",13,"^W",4,"^[",13,"^U",8,"^14","^H","^15","Returns the head of the queue","^16",["^17",["^18",["^17",[["^19"]]]]]],"^14","^H","^:","~$naga.queue/head","^1=",false,"^T","resources/public/cljs/out/naga/queue.cljc","^U",8,"^1?",["^17",[["^19"]]],"^1B",null,"^1@",["^17",[null,null]],"^W",1,"^Y",11,"^[",13,"^1>",1,"^1C",true,"^16",["^17",["^18",["^17",[["^19"]]]]],"^15","Returns the head of the queue"],"~$PQueueType",["^ ","^:","~$naga.queue/PQueueType","^T","resources/public/cljs/out/naga/queue.cljc","^Y",20,"^W",1,"^[",20,"^U",16,"^13",["^ ","^T","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/queue.cljc","^Y",20,"^W",6,"^[",20,"^U",16],"^1T","^1U"],"^1Q",["^ ","^12",null,"^13",["^ ","^T","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/queue.cljc","^Y",12,"^W",4,"^[",12,"^U",11,"^14","^H","^15","Returns the number of items in the queue","^16",["^17",["^18",["^17",[["^19"]]]]]],"^14","^H","^:","~$naga.queue/q-count","^1=",false,"^T","resources/public/cljs/out/naga/queue.cljc","^U",11,"^1?",["^17",[["^19"]]],"^1B",null,"^1@",["^17",[null,null]],"^W",1,"^Y",11,"^[",12,"^1>",1,"^1C",true,"^16",["^17",["^18",["^17",[["^19"]]]]],"^15","Returns the number of items in the queue"],"~$->SalienceQueue",["^ ","^12",null,"^13",["^ ","^T","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/queue.cljc","^Y",33,"^W",12,"^[",33,"^U",25,"^X",true,"^1E","~:positional","^16",["^17",["^18",["^17",[["~$q","~$h","~$id-fn","~$salience-fn"]]]]],"^15","Positional factory function for naga.queue/SalienceQueue."],"^:","~$naga.queue/->SalienceQueue","^1=",false,"^T","resources/public/cljs/out/naga/queue.cljc","^U",25,"^1?",["^17",[["~$q","~$h","^21","^22"]]],"^1B",null,"^1@",["^17",[null,null]],"^W",1,"^X",true,"^1E","^20","^Y",33,"^[",33,"^1>",4,"^1C",true,"^16",["^17",["^18",["^17",[["~$q","~$h","^21","^22"]]]]],"^15","Positional factory function for naga.queue/SalienceQueue."],"~$new-queue",["^ ","~:schema",["^17",["~$schema.core/make-fn-schema","~$output-schema36057",["~$input-schema36058","~$input-schema36061"]]],"^12",null,"^13",["^ ","^25",["^17",["^26","^27",["^28","^29"]]],"^T","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/queue.cljc","^U",18,"^1<",["^ ","^1=",false,"^1>",2,"^1?",["^17",[[],["~$G__36064","~$G__36065"]]],"^16",["^17",[[],["^2:","^2;"]]],"^1@",["^17",[null,null]]],"^W",9,"~:raw-arglists",["^17",["^18",["^17",[[],["^22","~:-",["^17",["~$s/maybe",["^17",["^5","~$s/Num","~$s/Any"]]]],"^21","~:-",["^17",["^5","^2?","^2?"]]]]]]],"^Y",57,"^[",57,"^16",["^17",["^18",["^17",[[],["^22","^21"]]]]],"^15","Inputs: ([] [salience-fn :- (s/maybe (=> s/Num s/Any)) id-fn :- (=> s/Any s/Any)])\n\n  Create an empty queue. When called without arguments, salience is ignored,\n   and update and ID are just identity."],"^:","~$naga.queue/new-queue","^1=",false,"^T","resources/public/cljs/out/naga/queue.cljc","^U",18,"^1<",["^ ","^1=",false,"^1>",2,"^1?",["^17",[[],["^2:","^2;"]]],"^16",["^17",[[],["^2:","^2;"]]],"^1@",["^17",[null,null]]],"^1?",["^17",[[],["^2:","^2;"]]],"^1B",null,"^1@",["^17",[null,null]],"^W",1,"^2<",["^17",["^18",["^17",[[],["^22","~:-",["^17",["^2=",["^17",["^5","^2>","^2?"]]]],"^21","~:-",["^17",["^5","^2?","^2?"]]]]]]],"^Y",57,"^[",57,"^1>",2,"^1C",true,"^16",["^17",[[],["^2:","^2;"]]],"^15","Inputs: ([] [salience-fn :- (s/maybe (=> s/Num s/Any)) id-fn :- (=> s/Any s/Any)])\n\n  Create an empty queue. When called without arguments, salience is ignored,\n   and update and ID are just identity."],"~$insert-by",["^ ","^25",["^17",["~$schema.core/->FnSchema","~$output-schema36029",["~$input-schema36030"]]],"^12",null,"^13",["^ ","^16",["^17",["^18",["^17",[["~$s","~$salience","~$e"]]]]],"^T","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/queue.cljc","^Y",22,"^W",9,"^[",22,"^U",18,"^25",["^17",["^2B","^2C",["^2D"]]],"^15","Inputs: [s :- [s/Any] salience :- (s/maybe (=> s/Num s/Any)) e :- s/Any]\n  Returns: [s/Any]","^2<",["^17",["^18",["^17",[["~$s","~:-",["^2?"],"^2E","~:-",["^17",["^2=",["^17",["^5","^2>","^2?"]]]],"~$e","~:-","^2?"]]]]]],"^:","~$naga.queue/insert-by","^1=",false,"^T","resources/public/cljs/out/naga/queue.cljc","^U",18,"^1?",["^17",[["~$G__36033","~$G__36034","~$G__36035"]]],"^1B",null,"^1@",["^17",[null,null]],"^W",1,"^2<",["^17",["^18",["^17",[["~$s","~:-",["^2?"],"^2E","~:-",["^17",["^2=",["^17",["^5","^2>","^2?"]]]],"~$e","~:-","^2?"]]]]],"^Y",22,"^[",22,"^1>",3,"^1C",true,"^16",["^17",["^18",["^17",[["~$s","^2E","~$e"]]]]],"^15","Inputs: [s :- [s/Any] salience :- (s/maybe (=> s/Num s/Any)) e :- s/Any]\n  Returns: [s/Any]"]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","~$s","^6","^6","^6"],"~:cljs.analyzer/constants",["^ ","~:seen",["^8",["~$schema.core/Any","~:q","^25","~:schema.core/error","~$q","~:value","~:salience-fn","^V","~:output","~:id-fn","^2E","^22","~:h","~$e","~$s","^21","^5","~:error","^2=","~:input","~$arg0","~$h","^15","^24","^2A","^2?","^2>"]],"~:order",["~$s","^25","^2?","^2V","^2E","^2=","^5","^2>","~$e","^2U","^2A","^V","^2P","^2T","^2O","^2R","~:q","~:h","^2S","^2Q","~$q","~$h","^21","^22","^24","^15","^2N"]],"^15","Defines a Queue structure that can be added to the tail, and removed from the head.\nAnything already in the queue (compared by ID) will not be added again, but a function can\nbe provided that will update the element when it is already present.\nIncludes a 'salience' which allows elements to be promoted through the queue ahead\nof less salient elements."]