["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$naga.rules","~:imports",null,"~:requires",["^ ","~$set","~$clojure.set","~$schema.core","^=","~$u","~$naga.util","^<","^<","~$naga.schema.structs","^?","~$s","^=","~$naga.schema.store-structs","^@","^>","^>","~$st","^?","~$ss","^@"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$EPVPattern","^@","~$Axiom","^@","~$Rule","^?","~$RulePatternPair","^?","~$Body","^?","~$Program","^?"],"~:defs",["^ ","~$find-matches",["^ ","~:schema",["~#list",["~$schema.core/->FnSchema","~$output-schema31749",["~$input-schema31750"]]],"~:protocol-inline",null,"~:meta",["^ ","~:arglists",["^N",["~$quote",["^N",[["~$a",["~$nm","~$sb"]]]]]],"~:file","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/rules.cljc","~:line",110,"~:column",9,"~:end-line",110,"~:end-column",21,"^M",["^N",["^O","^P",["^Q"]]],"~:doc","Inputs: [a :- EPVPattern [nm sb] :- [(s/one s/Str \"rule-name\") (s/one Body \"body\")]]\n  Returns: [RulePatternPair]\n\n  returns a sequence of name/pattern pairs where a matches a pattern in a named rule","~:raw-arglists",["^N",["^U",["^N",[["~$a","~:-","^E",["^V","^W"],"~:-",[["^N",["~$s/one","~$s/Str","rule-name"]],["^N",["^13","^I","body"]]]]]]]]],"^7","~$naga.rules/find-matches","~:variadic",false,"^X","resources/public/cljs/out/naga/rules.cljc","^10",21,"~:method-params",["^N",[["~$G__31753","~$G__31754"]]],"~:protocol-impl",null,"~:arglists-meta",["^N",[null,null]],"^Z",1,"^12",["^N",["^U",["^N",[["~$a","~:-","^E",["^V","^W"],"~:-",[["^N",["^13","^14","rule-name"]],["^N",["^13","^I","body"]]]]]]]],"^Y",110,"^[",110,"~:max-fixed-arity",2,"~:fn-var",true,"^T",["^N",["^U",["^N",[["~$a",["^V","^W"]]]]]],"^11","Inputs: [a :- EPVPattern [nm sb] :- [(s/one s/Str \"rule-name\") (s/one Body \"body\")]]\n  Returns: [RulePatternPair]\n\n  returns a sequence of name/pattern pairs where a matches a pattern in a named rule"],"~$check-symbol",["^ ","^R",null,"^S",["^ ","^X","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/rules.cljc","^Y",92,"^Z",7,"^[",92,"^10",19,"^T",["^N",["^U",["^N",[["~$sym"]]]]],"^11","Asserts that symbols are unbound variables for a query. Return true if it passes."],"^7","~$naga.rules/check-symbol","^16",false,"^X","resources/public/cljs/out/naga/rules.cljc","^10",19,"^17",["^N",[["^1?"]]],"^1:",null,"^1;",["^N",[null,null]],"^Z",1,"^Y",92,"^[",92,"^1<",1,"^1=",true,"^T",["^N",["^U",["^N",[["^1?"]]]]],"^11","Asserts that symbols are unbound variables for a query. Return true if it passes."],"~$create-program",["^ ","^M",["^N",["^O","~$output-schema31776",["~$input-schema31777"]]],"^R",null,"^S",["^ ","^T",["^N",["^U",["^N",[["~$rules","~$axioms"]]]]],"^X","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/rules.cljc","^Y",121,"^Z",9,"^[",121,"^10",23,"^M",["^N",["^O","^1B",["^1C"]]],"^11","Inputs: [rules :- [Rule] axioms :- [Axiom]]\n  Returns: Program\n\n  Converts a sequence of rules into a program.\n   A program consists of a map of rule names to rules, where the rules have dependencies.","^12",["^N",["^U",["^N",[["^1D","~:-",["^G"],"^1E","~:-",["^F"]]]]]]],"^7","~$naga.rules/create-program","^16",false,"^X","resources/public/cljs/out/naga/rules.cljc","^10",23,"^17",["^N",[["~$G__31780","~$G__31781"]]],"^1:",null,"^1;",["^N",[null,null]],"^Z",1,"^12",["^N",["^U",["^N",[["^1D","~:-",["^G"],"^1E","~:-",["^F"]]]]]],"^Y",121,"^[",121,"^1<",2,"^1=",true,"^T",["^N",["^U",["^N",[["^1D","^1E"]]]]],"^11","Inputs: [rules :- [Rule] axioms :- [Axiom]]\n  Returns: Program\n\n  Converts a sequence of rules into a program.\n   A program consists of a map of rule names to rules, where the rules have dependencies."],"~$match?",["^ ","^M",["^N",["^O","~$output-schema31732",["~$input-schema31733"]]],"^R",null,"^S",["^ ","^T",["^N",["^U",["^N",[["~$a","~$b"]]]]],"^X","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/rules.cljc","^Y",105,"^Z",9,"^[",105,"^10",15,"^M",["^N",["^O","^1J",["^1K"]]],"^11","Inputs: [a :- EPVPattern b :- EPVPattern]\n  Returns: s/Bool\n\n  Does pattern a match pattern b?","^12",["^N",["^U",["^N",[["~$a","~:-","^E","~$b","~:-","^E"]]]]]],"^7","~$naga.rules/match?","^16",false,"^X","resources/public/cljs/out/naga/rules.cljc","^10",15,"^17",["^N",[["~$G__31736","~$G__31737"]]],"^1:",null,"^1;",["^N",[null,null]],"^Z",1,"^12",["^N",["^U",["^N",[["~$a","~:-","^E","~$b","~:-","^E"]]]]],"^Y",105,"^[",105,"^1<",2,"^1=",true,"^T",["^N",["^U",["^N",[["~$a","~$b"]]]]],"^11","Inputs: [a :- EPVPattern b :- EPVPattern]\n  Returns: s/Bool\n\n  Does pattern a match pattern b?"],"~$vars",["^ ","^R",null,"^S",["^ ","^X","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/rules.cljc","^Y",25,"^Z",8,"^[",25,"^10",12,"~:private",true,"^T",["^N",["^U",["^N",[["~$constraint"]]]]]],"^1P",true,"^7","~$naga.rules/vars","^16",false,"^X","resources/public/cljs/out/naga/rules.cljc","^10",12,"^17",["^N",[["^1Q"]]],"^1:",null,"^1;",["^N",[null,null]],"^Z",1,"^Y",25,"^[",25,"^1<",1,"^1=",true,"^T",["^N",["^U",["^N",[["^1Q"]]]]]],"~$r",["^ ","^R",null,"^S",["^ ","^X","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/rules.cljc","^Y",82,"^Z",11,"^[",82,"^10",12,"~:macro",true,"^T",["^N",["^U",["^N",[["~$&",["~$f","~:as","~$rs"]]]]]],"^11","Create a rule, with an optional name.\n   Var symbols need not be quoted.","~:top-fn",["^ ","^16",true,"^1<",2,"^17",[["^N",["~$&form","~$&env",["~$f","^1T","^1U"]]]],"^T",["^N",[["^1W","^1X","~$&",["~$f","^1T","^1U"]]]],"^1;",["^N",[null]]]],"^7","~$naga.rules/r","^16",true,"^X","resources/public/cljs/out/naga/rules.cljc","^10",12,"^1V",["^ ","^16",true,"^1<",2,"^17",[["^N",["^1W","^1X",["~$f","^1T","^1U"]]]],"^T",["^N",[["^1W","^1X","~$&",["~$f","^1T","^1U"]]]],"^1;",["^N",[null]]],"^17",[["^N",["^1W","^1X",["~$f","^1T","^1U"]]]],"^1:",null,"^1;",["^N",[null]],"^Z",1,"^Y",82,"^1S",true,"^[",82,"^1<",2,"^1=",false,"^T",["^N",[["^1W","^1X","~$&",["~$f","^1T","^1U"]]]],"^11","Create a rule, with an optional name.\n   Var symbols need not be quoted."],"~$dbg",["^ ","^R",null,"^S",["^ ","^X","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/rules.cljc","^Y",119,"^Z",7,"^[",119,"^10",10,"^T",["^N",["^U",["^N",[["~$x"]]]]]],"^7","~$naga.rules/dbg","^16",false,"^X","resources/public/cljs/out/naga/rules.cljc","^10",10,"^17",["^N",[["~$x"]]],"^1:",null,"^1;",["^N",[null,null]],"^Z",1,"^Y",119,"^[",119,"^1<",1,"^1=",true,"^T",["^N",["^U",["^N",[["~$x"]]]]]],"~$named-rule",["^ ","^M",["^N",["^O","~$output-schema31694",["~$input-schema31695"]]],"^R",null,"^S",["^ ","^T",["^N",["^U",["^N",[["~$name",["^ ","~:keys",["~$head","~$body","~$salience","~$downstream"]]]]]]],"^X","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/rules.cljc","^Y",52,"^Z",9,"^[",52,"^10",19,"^M",["^N",["^O","^21",["^22"]]],"^11","Inputs: [name :- Rule {:keys [head body salience downstream]} :- s/Str]\n  Returns: Rule\n\n  Creates a rule the same as an existing rule, with a different name.","^12",["^N",["^U",["^N",[["^23","~:-","^G",["^ ","^24",["^25","^26","^27","^28"]],"~:-","^14"]]]]]],"^7","~$naga.rules/named-rule","^16",false,"^X","resources/public/cljs/out/naga/rules.cljc","^10",19,"^17",["^N",[["~$G__31698","~$G__31699"]]],"^1:",null,"^1;",["^N",[null,null]],"^Z",1,"^12",["^N",["^U",["^N",[["^23","~:-","^G",["^ ","^24",["^25","^26","^27","^28"]],"~:-","^14"]]]]],"^Y",52,"^[",52,"^1<",2,"^1=",true,"^T",["^N",["^U",["^N",[["^23",["^ ","^24",["^25","^26","^27","^28"]]]]]]],"^11","Inputs: [name :- Rule {:keys [head body salience downstream]} :- s/Str]\n  Returns: Rule\n\n  Creates a rule the same as an existing rule, with a different name."],"~$fresh-var?",["^ ","^R",null,"^S",["^ ","^X","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/rules.cljc","^Y",21,"^Z",8,"^[",21,"^10",18,"^1P",true,"^T",["^N",["^U",["^N",[["~$x"]]]]]],"^1P",true,"^7","~$naga.rules/fresh-var?","^16",false,"^X","resources/public/cljs/out/naga/rules.cljc","^10",18,"^17",["^N",[["~$x"]]],"^1:",null,"^1;",["^N",[null,null]],"^Z",1,"^Y",21,"^[",21,"^1<",1,"^1=",true,"^T",["^N",["^U",["^N",[["~$x"]]]]]],"~$rule",["^ ","^M",["^N",["~$schema.core/make-fn-schema","~$output-schema31660",["~$input-schema31661","~$input-schema31666"]]],"^R",null,"^S",["^ ","^M",["^N",["^2?","^2@",["^2A","^2B"]]],"^X","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/rules.cljc","^10",13,"^1V",["^ ","^16",false,"^1<",3,"^17",["^N",[["~$G__31664","~$G__31665"],["~$G__31669","~$G__31670","~$G__31671"]]],"^T",["^N",[["^2C","^2D"],["^2E","^2F","^2G"]]],"^1;",["^N",[null,null]]],"^Z",9,"^12",["^N",["^U",["^N",[["^25","^26"],["^25","^26","^23"]]]]],"^Y",40,"^[",40,"^T",["^N",["^U",["^N",[["^25","^26"],["^25","^26","^23"]]]]],"^11","Inputs: ([head body] [head body name])\n  Returns: Rule\n\n  Creates a new rule"],"^7","~$naga.rules/rule","^16",false,"^X","resources/public/cljs/out/naga/rules.cljc","^10",13,"^1V",["^ ","^16",false,"^1<",3,"^17",["^N",[["^2C","^2D"],["^2E","^2F","^2G"]]],"^T",["^N",[["^2C","^2D"],["^2E","^2F","^2G"]]],"^1;",["^N",[null,null]]],"^17",["^N",[["^2C","^2D"],["^2E","^2F","^2G"]]],"^1:",null,"^1;",["^N",[null,null]],"^Z",1,"^12",["^N",["^U",["^N",[["^25","^26"],["^25","^26","^23"]]]]],"^Y",40,"^[",40,"^1<",3,"^1=",true,"^T",["^N",[["^2C","^2D"],["^2E","^2F","^2G"]]],"^11","Inputs: ([head body] [head body name])\n  Returns: Rule\n\n  Creates a new rule"],"~$de-ns",["^ ","^R",null,"^S",["^ ","^X","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/rules.cljc","^Y",74,"^Z",8,"^[",74,"^10",13,"^1P",true,"^T",["^N",["^U",["^N",[["~$pattern"]]]]],"^11","Remove namespaces from symbols in a pattern"],"^1P",true,"^7","~$naga.rules/de-ns","^16",false,"^X","resources/public/cljs/out/naga/rules.cljc","^10",13,"^17",["^N",[["^2J"]]],"^1:",null,"^1;",["^N",[null,null]],"^Z",1,"^Y",74,"^[",74,"^1<",1,"^1=",true,"^T",["^N",["^U",["^N",[["^2J"]]]]],"^11","Remove namespaces from symbols in a pattern"],"~$resolve-element",["^ ","^R",null,"^S",["^ ","^X","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/rules.cljc","^Y",58,"^Z",8,"^[",58,"^10",23,"^1P",true,"^T",["^N",["^U",["^N",[["~$e"]]]]],"^11","Takes a keyword or a symbol and resolve it as a function.\n   Only namespaced keywords get converted.\n   Symbols default to the clojure.core namespace when no namespace is present.\n   Symbols starting with ? are not converted.\n   Anything unresolvable is not converted."],"^1P",true,"^7","~$naga.rules/resolve-element","^16",false,"^X","resources/public/cljs/out/naga/rules.cljc","^10",23,"^17",["^N",[["~$e"]]],"^1:",null,"^1;",["^N",[null,null]],"^Z",1,"^Y",58,"^[",58,"^1<",1,"^1=",true,"^T",["^N",["^U",["^N",[["~$e"]]]]],"^11","Takes a keyword or a symbol and resolve it as a function.\n   Only namespaced keywords get converted.\n   Symbols default to the clojure.core namespace when no namespace is present.\n   Symbols starting with ? are not converted.\n   Anything unresolvable is not converted."],"~$fresh-var",["^ ","^R",null,"^S",["^ ","^X","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/rules.cljc","^Y",16,"^Z",8,"^[",16,"^10",17,"^1P",true,"^T",["^N",["^U",["^N",[["~$v"]]]]],"^11","Changes a var to a 'fresh' var. These start with % rather than ?"],"^1P",true,"^7","~$naga.rules/fresh-var","^16",false,"^X","resources/public/cljs/out/naga/rules.cljc","^10",17,"^17",["^N",[["~$v"]]],"^1:",null,"^1;",["^N",[null,null]],"^Z",1,"^Y",16,"^[",16,"^1<",1,"^1=",true,"^T",["^N",["^U",["^N",[["~$v"]]]]],"^11","Changes a var to a 'fresh' var. These start with % rather than ?"],"~$compatible",["^ ","^R",null,"^S",["^ ","^X","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/rules.cljc","^Y",99,"^Z",7,"^[",99,"^10",17,"^T",["^N",["^U",["^N",[["~$x","~$y"]]]]]],"^7","~$naga.rules/compatible","^16",false,"^X","resources/public/cljs/out/naga/rules.cljc","^10",17,"^17",["^N",[["~$x","~$y"]]],"^1:",null,"^1;",["^N",[null,null]],"^Z",1,"^Y",99,"^[",99,"^1<",2,"^1=",true,"^T",["^N",["^U",["^N",[["~$x","~$y"]]]]]],"~$mark-unbound",["^ ","^R",null,"^S",["^ ","^X","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/rules.cljc","^Y",30,"^Z",7,"^[",30,"^10",19,"^T",["^N",["^U",["^N",[["^25","^26"]]]]],"^11","Convert a head to use fresh vars for any vars that are unbound.\n   Scans the vars in the body to identify which vars are unbound."],"^7","~$naga.rules/mark-unbound","^16",false,"^X","resources/public/cljs/out/naga/rules.cljc","^10",19,"^17",["^N",[["^25","^26"]]],"^1:",null,"^1;",["^N",[null,null]],"^Z",1,"^Y",30,"^[",30,"^1<",2,"^1=",true,"^T",["^N",["^U",["^N",[["^25","^26"]]]]],"^11","Convert a head to use fresh vars for any vars that are unbound.\n   Scans the vars in the body to identify which vars are unbound."],"~$gen-rule-name",["^ ","^R",null,"^S",["^ ","^X","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/rules.cljc","^Y",14,"^Z",8,"^[",14,"^10",21,"^1P",true,"^T",["^N",["^U",["^N",[[]]]]]],"^1P",true,"^7","~$naga.rules/gen-rule-name","^16",false,"^X","resources/public/cljs/out/naga/rules.cljc","^10",21,"^17",["^N",[[]]],"^1:",null,"^1;",["^N",[null,null]],"^Z",1,"^Y",14,"^[",14,"^1<",0,"^1=",true,"^T",["^N",["^U",["^N",[[]]]]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","~$s","^=","^=","^="],"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~$schema.core/Any","^M","^L","^26","~:downstream","^1A","^E","~:schema.core/error","^1I","~$a","^F","~$arg1","^2H","~:default","~:salience","^7","~:-","~:value","^G","~:type","~:output","~:rules","~:axioms","^20","^2>","^23","^H","~:head","~$s/Bool","^1D","^1E","~:error","^25","~:input","^U","~:body","^11","~$b","^J"]],"~:order",["^25","^M","^2Z","^26","^23","^3<","^2>","^11","^G","^35","^34","^3;","^30","^36","^31","^20","^39","^3=","^33","^2[","^32","~:-","^2H","^U","~$a","^E","~$b","^1I","^3:","^L","^H","^1D","^1E","^F","^1A","^J","^7","^37","^38"]],"^11","Defines rule structures and constructors to keep them consistent"]