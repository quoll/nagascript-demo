["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ ","~$=>","~$schema.core"],"~:excludes",["~#set",[]],"~:name","~$naga.util","~:imports",null,"~:requires",["^ ","~$s","^6","^6","^6","~$js","~$cljs.js","^>","^>"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$eval","^>","~$empty-state","^>","~$js-eval","^>"],"~:defs",["^ ","~$mapmap",["^ ","~:schema",["~#list",["~$schema.core/make-fn-schema","~$output-schema31448",["~$input-schema31449","~$input-schema31454"]]],"~:protocol-inline",null,"~:meta",["^ ","^F",["^G",["^H","^I",["^J","^K"]]],"~:file","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/util.cljc","~:end-column",15,"~:top-fn",["^ ","~:variadic",false,"~:max-fixed-arity",3,"~:method-params",["^G",[["~$G__31452","~$G__31453"],["~$G__31457","~$G__31458","~$G__31459"]]],"~:arglists",["^G",[["^T","^U"],["^V","^W","^X"]]],"~:arglists-meta",["^G",[null,null]]],"~:column",9,"~:raw-arglists",["^G",["~$quote",["^G",[["~$valfn","~:-",["^G",["^5","~$s/Any","^13"]],"~$s","~:-",["^13"]],["~$keyfn","~:-",["^G",["^5","^13","^13"]],"^12","~:-",["^G",["^5","^13","^13"]],"~$s","~:-",["^13"]]]]]],"~:line",7,"~:end-line",7,"^Y",["^G",["^11",["^G",[["^12","~$s"],["^14","^12","~$s"]]]]],"~:doc","Inputs: ([valfn :- (=> s/Any s/Any) s :- [s/Any]] [keyfn :- (=> s/Any s/Any) valfn :- (=> s/Any s/Any) s :- [s/Any]])\n  Returns: #:s{Any s/Any}\n\n  Creates a map from functions applied to a seq.\n   (map (partial * 2) [1 2 3 4 5])\n     => {1 2, 2 4, 3 6, 4 8, 5 10}\n   (map #(keyword (str \"k\" (dec %))) (partial * 3) [1 2 3])\n     => {:k0 3, :k1 6, :k2 9}"],"^9","~$naga.util/mapmap","^Q",false,"^N","resources/public/cljs/out/naga/util.cljc","^O",15,"^P",["^ ","^Q",false,"^R",3,"^S",["^G",[["^T","^U"],["^V","^W","^X"]]],"^Y",["^G",[["^T","^U"],["^V","^W","^X"]]],"^Z",["^G",[null,null]]],"^S",["^G",[["^T","^U"],["^V","^W","^X"]]],"~:protocol-impl",null,"^Z",["^G",[null,null]],"^[",1,"^10",["^G",["^11",["^G",[["^12","~:-",["^G",["^5","^13","^13"]],"~$s","~:-",["^13"]],["^14","~:-",["^G",["^5","^13","^13"]],"^12","~:-",["^G",["^5","^13","^13"]],"~$s","~:-",["^13"]]]]]],"^15",7,"^16",7,"^R",3,"~:fn-var",true,"^Y",["^G",[["^T","^U"],["^V","^W","^X"]]],"^17","Inputs: ([valfn :- (=> s/Any s/Any) s :- [s/Any]] [keyfn :- (=> s/Any s/Any) valfn :- (=> s/Any s/Any) s :- [s/Any]])\n  Returns: #:s{Any s/Any}\n\n  Creates a map from functions applied to a seq.\n   (map (partial * 2) [1 2 3 4 5])\n     => {1 2, 2 4, 3 6, 4 8, 5 10}\n   (map #(keyword (str \"k\" (dec %))) (partial * 3) [1 2 3])\n     => {:k0 3, :k1 6, :k2 9}"],"~$get-fn-reference",["^ ","^F",["^G",["~$schema.core/->FnSchema","~$output-schema31482",["~$input-schema31483"]]],"^L",null,"^M",["^ ","^Y",["^G",["^11",["^G",[["~$kw"]]]]],"^N","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/util.cljc","^15",33,"^[",12,"^16",33,"^O",28,"^F",["^G",["^1<","^1=",["^1>"]]],"^17","Inputs: [kw :- (s/cond-pre s/Keyword s/Symbol)]\n  Returns: (s/maybe Var)\n\n  Looks up a namespace:name function represented in a keyword,\n      and if it exists, return it. Otherwise nil","^10",["^G",["^11",["^G",[["^1?","~:-",["^G",["~$s/cond-pre","~$s/Keyword","~$s/Symbol"]]]]]]]],"^9","~$naga.util/get-fn-reference","^Q",false,"^N","resources/public/cljs/out/naga/util.cljc","^O",28,"^S",["^G",[["~$G__31486"]]],"^19",null,"^Z",["^G",[null,null]],"^[",4,"^10",["^G",["^11",["^G",[["^1?","~:-",["^G",["^1@","^1A","^1B"]]]]]]],"^15",33,"^16",33,"^R",1,"^1:",true,"^Y",["^G",["^11",["^G",[["^1?"]]]]],"^17","Inputs: [kw :- (s/cond-pre s/Keyword s/Symbol)]\n  Returns: (s/maybe Var)\n\n  Looks up a namespace:name function represented in a keyword,\n      and if it exists, return it. Otherwise nil"],"~$divide'",["^ ","^F",["^G",["^1<","~$output-schema31499",["~$input-schema31500"]]],"^L",null,"^M",["^ ","^Y",["^G",["^11",["^G",[["~$p","~$s"]]]]],"^N","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/util.cljc","^15",48,"^[",9,"^16",48,"^O",16,"^F",["^G",["^1<","^1F",["^1G"]]],"^17","Inputs: [p s :- [s/Any]]\n  Returns: [[s/Any] [s/Any]]\n\n  Takes a predicate and a sequence and returns 2 sequences.\n   The first is where the predicate returns true, and the second\n   is where the predicate returns false. Note that a nil value\n   will not be returned in either sequence, regardless of the\n   value returned by the predicate.","^10",["^G",["^11",["^G",[["~$p","~$s","~:-",["^13"]]]]]]],"^9","~$naga.util/divide'","^Q",false,"^N","resources/public/cljs/out/naga/util.cljc","^O",16,"^S",["^G",[["~$G__31503","~$G__31504"]]],"^19",null,"^Z",["^G",[null,null]],"^[",1,"^10",["^G",["^11",["^G",[["~$p","~$s","~:-",["^13"]]]]]],"^15",48,"^16",48,"^R",2,"^1:",true,"^Y",["^G",["^11",["^G",[["~$p","~$s"]]]]],"^17","Inputs: [p s :- [s/Any]]\n  Returns: [[s/Any] [s/Any]]\n\n  Takes a predicate and a sequence and returns 2 sequences.\n   The first is where the predicate returns true, and the second\n   is where the predicate returns false. Note that a nil value\n   will not be returned in either sequence, regardless of the\n   value returned by the predicate."],"~$fixpoint",["^ ","^L",null,"^M",["^ ","^N","/Users/pgearon/dev/play/cljs/nagascript-demo/resources/public/cljs/out/naga/util.cljc","^15",59,"^[",7,"^16",59,"^O",15,"^Y",["^G",["^11",["^G",[["~$f","~$a"]]]]],"^17","Applies the function f to the value a. The function is then,\n   and applied to the result, over and over, until the result does not change.\n   Returns the final result.\n   Note: If the function has no fixpoint, then runs forever."],"^9","~$naga.util/fixpoint","^Q",false,"^N","resources/public/cljs/out/naga/util.cljc","^O",15,"^S",["^G",[["~$f","~$a"]]],"^19",null,"^Z",["^G",[null,null]],"^[",1,"^15",59,"^16",59,"^R",2,"^1:",true,"^Y",["^G",["^11",["^G",[["~$f","~$a"]]]]],"^17","Applies the function f to the value a. The function is then,\n   and applied to the result, over and over, until the result does not change.\n   Returns the final result.\n   Note: If the function has no fixpoint, then runs forever."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","~$s","^6","^6","^6","^=","^>","^>","^>"],"~:cljs.analyzer/constants",["^ ","~:seen",["^8",["^1A","^E","~$Var","~$schema.core/Any","^F","~:schema.core/error","~$p","^1;","~:value","^1E","~:type","~:output","^1@","^1B","^14","~:expr","^12","~$s","^1?","~:source-map","^5","~:context","~:error","~$s/maybe","~:input","~$arg0","^17","^13","~:eval"]],"~:order",["^21","^12","^F","^5","^13","~$s","^14","^20","^E","^17","^1U","^1T","^1Z","^1S","^1V","^1?","^1@","^1A","^1B","^1;","^1[","^1Q","^22","^1X","^1Y","^1W","~$p","^1R","^1E"]],"^17","The ubiquitous utility namespace that every project seems to have"]